name: GitHub Self-service

on:
  workflow_dispatch:
    inputs:
      repo-name:
        description: 'Repository Name'
        required: true
      project-name:
        description: 'Project Name'
        required: true
      clean-up:
        description: 'Clean up Resources'
        required: true
        type: boolean
        default: true

jobs:
  create-github:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      REPO: ${{ github.event.inputs.repo-name }}
      PROJECT: ${{ github.event.inputs.project-name }}
      CLEAN_UP: ${{ github.event.inputs.clean-up }}
      OWNER: ${{ github.repository_owner }}

    steps:
        
      - name: Create Repo
        run: |
          REPO_NAME=$(gh repo create $REPO --public --add-readme --license MIT --gitignore Node)
          echo "CREATED_REPO=${REPO_NAME}" >> $GITHUB_ENV
        
      - name: View Repo
        run: gh repo view $CREATED_REPO

      - name: Create Branch Protection Rule
        run: |
          curl -X "POST" "https://api.github.com/repos/${OWNER}/${REPO}/rulesets" \
          -H "Authorization: Bearer ${GITHUB_TOKEN}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "require PR ruleset",
            "target": "branch",
            "enforcement": "active",
            "conditions": {
              "ref_name": {
                "include": ["refs/heads/main"]
              }
            },
            "rules": [
              {
                "type": "pull_request",
                "parameters": {
                  "dismiss_stale_reviews_on_push": true,
                  "require_code_owner_review": false,
                  "require_last_push_approval": false,
                  "required_approving_review_count": 1,
                  "required_review_thread_resolution": true,
                }
              }
            ]
          }'

      - name: Enable Discussions
        run: gh repo edit $CREATED_REPO --enable-discussions

      - name: Create Label - Security Patch
        run: gh label create "security patch" -d "security update needed" -R $CREATED_REPO -c f54242

      - name: List Labels
        run: gh label list -R $CREATED_REPO

      - name: Create Project
        run: |
          PROJECT_DETAILS=$(gh project create --owner @me --title "$PROJECT" --format json)
          echo "PROJECT_NUMBER=$(echo "$PROJECT_DETAILS" | jq -r '.number')" >> $GITHUB_ENV
      
      - name: View Project
        run: gh project view $PROJECT_NUMBER --owner @me

      - name: Create Project Field - Effort
        run: gh project field-create $PROJECT_NUMBER --owner @me --name "Effort" --data-type "NUMBER"

      - name: Create Project Field - Priority
        run: gh project field-create $PROJECT_NUMBER --owner @me --name "Priority" --data-type "NUMBER"
      
      - name: List Project Fields
        run: gh project field-list $PROJECT_NUMBER --owner @me

      - name: Delete Repo
        if: ${{ env.CLEAN_UP == 'true' }}
        run: gh repo delete $CREATED_REPO --yes

      - name: Delete Project
        if: ${{ env.CLEAN_UP == 'true' }}
        run: gh project delete $PROJECT_NUMBER --owner "@me"